par(op)
magic <- ggplot(data=rgb, aes(x=value, group=color, fill=color)) +
geom_density(adjust=1.5, alpha=.8) +
scale_fill_manual(values=c("blue", "green", "red")) +
ggtitle("Magically Making Distribution Look Good")
gauss
gauss <- rgb %>%
group_by(color) %>%
mutate(gauss=gaussian(value))
head(gauss)
#Make a rscript, that accepts a filename.
#So you can generate these graphs during the presentation
filename <- "dandelion.jpeg"
img <- readJPEG(filename)
dims <- attributes(img)$dim
if(dims[3] != 3) {
print("This could be more flexible. I'll do it later")
stop("Channels not RGB")
}
rgb <- data.frame(red=as.vector(img[,,1]),
green=as.vector(img[,,2]),
blue=as.vector(img[,,3]))
rgb <- rgb %>%
pivot_longer(cols=c("red", "green", "blue"), names_to="color")
pdf <- rgb %>%
group_by(color) %>%
mutate(pdf=pnorm(value)) %>%
ggplot(mapping=aes(1:nrow(rgb), y=pdf, group=color, colour=color)) +
geom_line() +
scale_color_manual(values=c("blue", "green", "red")) +
ggtitle("Probability Density Function of Image Rows") +
facet_wrap(vars(color), ncol=1)
cdf <- rgb %>%
group_by(color) %>%
mutate(cdf=dnorm(value)) %>%
ggplot(mapping=aes(1:nrow(rgb), y=cdf, group=color, colour=color)) +
geom_line() +
scale_color_manual(values=c("blue", "green", "red")) +
ggtitle("Cumulative Distribution Function of Image Rows") +
facet_wrap(vars(color), ncol=1)
gauss <- rgb %>%
group_by(color) %>%
mutate(gauss=gaussian(value)) %>%
ggplot(aes(x=gauss, group=color, colour=color)) +
geom_density() +
ggplot(aes(x=value, group=color, colour=color)) +
geom_density()
scale_color_manual(values=c('blue', 'green', 'red')) +
ggtitle('Gaussian function of Image Rows') +
facet_wrap(vars(color), ncol=1, scales="free_y")
#Format dataframe
df <- rgb %>%
group_by(color) %>%
mutate(pdf=pnorm(value),
cdf=dnorm(value),
gauss=gaussian(value),
row=row_number()) %>%
select(-value) %>%
pivot_wider(names_from=color, values_from = c(pdf, cdf, gauss)) %>%
select(-row)
pdf_img <- array(dim=dims)
pdf_img[,,1] <- df$pdf_red
pdf_img[,,2] <- df$pdf_green
pdf_img[,,3] <- df$pdf_blue
cdf_img <- array(dim=dims)
cdf_img[,,1] <- df$cdf_red
cdf_img[,,2] <- df$cdf_green
cdf_img[,,3] <- df$cdf_blue
gauss_img <- array(dim=dims)
gauss_img[,,1] <- df$gauss_red
gauss_img[,,2] <- df$gauss_green
gauss_img[,,3] <- df$gauss_blue
# Display new images
op <- par(
mai = c(0, 0, 0, 0),
mar = c(1, 1, 1, 1),
mfrow=c(2, 2),
bty = "n",
oma = c(0, 0, 0, 0),
omi = c(0, 0, 0, 0)
)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "Original"
)
rasterImage(img, 0, 0, dims[1], dims[2], interpolate = FALSE)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "PDF"
)
rasterImage(pdf_img, 0, 0, dims[1], dims[2], interpolate=FALSE)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "CDF"
)
rasterImage(cdf_img, 0, 0, dims[1], dims[2], interpolate=FALSE)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "Gaussian"
)
rasterImage(gauss_img, 0, 0, dims[1], dims[2], interpolate=FALSE)
par(op)
magic <- ggplot(data=rgb, aes(x=value, group=color, fill=color)) +
geom_density(adjust=1.5, alpha=.8) +
scale_fill_manual(values=c("blue", "green", "red")) +
ggtitle("Magically Making Distribution Look Good")
#Make a rscript, that accepts a filename.
#So you can generate these graphs during the presentation
filename <- "dandelion.jpeg"
img <- readJPEG(filename)
dims <- attributes(img)$dim
if(dims[3] != 3) {
print("This could be more flexible. I'll do it later")
stop("Channels not RGB")
}
rgb <- data.frame(red=as.vector(img[,,1]),
green=as.vector(img[,,2]),
blue=as.vector(img[,,3]))
rgb <- rgb %>%
pivot_longer(cols=c("red", "green", "blue"), names_to="color")
pdf <- rgb %>%
group_by(color) %>%
mutate(pdf=pnorm(value)) %>%
ggplot(mapping=aes(1:nrow(rgb), y=pdf, group=color, colour=color)) +
geom_line() +
scale_color_manual(values=c("blue", "green", "red")) +
ggtitle("Probability Density Function of Image Rows") +
facet_wrap(vars(color), ncol=1)
cdf <- rgb %>%
group_by(color) %>%
mutate(cdf=dnorm(value)) %>%
ggplot(mapping=aes(1:nrow(rgb), y=cdf, group=color, colour=color)) +
geom_line() +
scale_color_manual(values=c("blue", "green", "red")) +
ggtitle("Cumulative Distribution Function of Image Rows") +
facet_wrap(vars(color), ncol=1)
gauss <- rgb %>%
group_by(color) %>%
mutate(gauss=gaussian(value)) %>%
ggplot(aes(x=gauss, group=color, colour=color)) +
geom_density() +
ggplot(aes(x=value, group=color, colour=color)) +
geom_density() +
scale_color_manual(values=c('blue', 'green', 'red')) +
ggtitle('Gaussian function of Image Rows') +
facet_wrap(vars(color), ncol=1, scales="free_y")
#Format dataframe
df <- rgb %>%
group_by(color) %>%
mutate(pdf=pnorm(value),
cdf=dnorm(value),
gauss=gaussian(value),
row=row_number()) %>%
select(-value) %>%
pivot_wider(names_from=color, values_from = c(pdf, cdf, gauss)) %>%
select(-row)
pdf_img <- array(dim=dims)
pdf_img[,,1] <- df$pdf_red
pdf_img[,,2] <- df$pdf_green
pdf_img[,,3] <- df$pdf_blue
cdf_img <- array(dim=dims)
cdf_img[,,1] <- df$cdf_red
cdf_img[,,2] <- df$cdf_green
cdf_img[,,3] <- df$cdf_blue
gauss_img <- array(dim=dims)
gauss_img[,,1] <- df$gauss_red
gauss_img[,,2] <- df$gauss_green
gauss_img[,,3] <- df$gauss_blue
# Display new images
op <- par(
mai = c(0, 0, 0, 0),
mar = c(1, 1, 1, 1),
mfrow=c(2, 2),
bty = "n",
oma = c(0, 0, 0, 0),
omi = c(0, 0, 0, 0)
)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "Original"
)
rasterImage(img, 0, 0, dims[1], dims[2], interpolate = FALSE)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "PDF"
)
rasterImage(pdf_img, 0, 0, dims[1], dims[2], interpolate=FALSE)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "CDF"
)
rasterImage(cdf_img, 0, 0, dims[1], dims[2], interpolate=FALSE)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "Gaussian"
)
rasterImage(gauss_img, 0, 0, dims[1], dims[2], interpolate=FALSE)
par(op)
magic <- ggplot(data=rgb, aes(x=value, group=color, fill=color)) +
geom_density(adjust=1.5, alpha=.8) +
scale_fill_manual(values=c("blue", "green", "red")) +
ggtitle("Magically Making Distribution Look Good")
?aes
#Make a rscript, that accepts a filename.
#So you can generate these graphs during the presentation
filename <- "dandelion.jpeg"
img <- readJPEG(filename)
dims <- attributes(img)$dim
if(dims[3] != 3) {
print("This could be more flexible. I'll do it later")
stop("Channels not RGB")
}
rgb <- data.frame(red=as.vector(img[,,1]),
green=as.vector(img[,,2]),
blue=as.vector(img[,,3]))
rgb <- rgb %>%
pivot_longer(cols=c("red", "green", "blue"), names_to="color")
pdf <- rgb %>%
group_by(color) %>%
mutate(pdf=pnorm(value)) %>%
ggplot(mapping=aes(1:nrow(rgb), y=pdf, group=color, colour=color)) +
geom_line() +
scale_color_manual(values=c("blue", "green", "red")) +
ggtitle("Probability Density Function of Image Rows") +
facet_wrap(vars(color), ncol=1)
cdf <- rgb %>%
group_by(color) %>%
mutate(cdf=dnorm(value)) %>%
ggplot(mapping=aes(1:nrow(rgb), y=cdf, group=color, colour=color)) +
geom_line() +
scale_color_manual(values=c("blue", "green", "red")) +
ggtitle("Cumulative Distribution Function of Image Rows") +
facet_wrap(vars(color), ncol=1)
gauss <- rgb %>%
group_by(color) %>%
mutate(gauss=gaussian(value)) %>%
ggplot() +
geom_density(aes(x=gauss, group=color, colour=color)) +
geom_density(aes(x=value), group=color) +
scale_color_manual(values=c('blue', 'green', 'red')) +
ggtitle('Gaussian function of Image Rows') +
facet_wrap(vars(color), ncol=1, scales="free_y")
#Format dataframe
df <- rgb %>%
group_by(color) %>%
mutate(pdf=pnorm(value),
cdf=dnorm(value),
gauss=gaussian(value),
row=row_number()) %>%
select(-value) %>%
pivot_wider(names_from=color, values_from = c(pdf, cdf, gauss)) %>%
select(-row)
pdf_img <- array(dim=dims)
pdf_img[,,1] <- df$pdf_red
pdf_img[,,2] <- df$pdf_green
pdf_img[,,3] <- df$pdf_blue
cdf_img <- array(dim=dims)
cdf_img[,,1] <- df$cdf_red
cdf_img[,,2] <- df$cdf_green
cdf_img[,,3] <- df$cdf_blue
gauss_img <- array(dim=dims)
gauss_img[,,1] <- df$gauss_red
gauss_img[,,2] <- df$gauss_green
gauss_img[,,3] <- df$gauss_blue
# Display new images
op <- par(
mai = c(0, 0, 0, 0),
mar = c(1, 1, 1, 1),
mfrow=c(2, 2),
bty = "n",
oma = c(0, 0, 0, 0),
omi = c(0, 0, 0, 0)
)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "Original"
)
rasterImage(img, 0, 0, dims[1], dims[2], interpolate = FALSE)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "PDF"
)
rasterImage(pdf_img, 0, 0, dims[1], dims[2], interpolate=FALSE)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "CDF"
)
rasterImage(cdf_img, 0, 0, dims[1], dims[2], interpolate=FALSE)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "Gaussian"
)
rasterImage(gauss_img, 0, 0, dims[1], dims[2], interpolate=FALSE)
par(op)
magic <- ggplot(data=rgb, aes(x=value, group=color, fill=color)) +
geom_density(adjust=1.5, alpha=.8) +
scale_fill_manual(values=c("blue", "green", "red")) +
ggtitle("Magically Making Distribution Look Good")
gauss
#Make a rscript, that accepts a filename.
#So you can generate these graphs during the presentation
filename <- "dandelion.jpeg"
img <- readJPEG(filename)
dims <- attributes(img)$dim
if(dims[3] != 3) {
print("This could be more flexible. I'll do it later")
stop("Channels not RGB")
}
rgb <- data.frame(red=as.vector(img[,,1]),
green=as.vector(img[,,2]),
blue=as.vector(img[,,3]))
rgb <- rgb %>%
pivot_longer(cols=c("red", "green", "blue"), names_to="color")
pdf <- rgb %>%
group_by(color) %>%
mutate(pdf=pnorm(value)) %>%
ggplot(mapping=aes(1:nrow(rgb), y=pdf, group=color, colour=color)) +
geom_line() +
scale_color_manual(values=c("blue", "green", "red")) +
ggtitle("Probability Density Function of Image Rows") +
facet_wrap(vars(color), ncol=1)
cdf <- rgb %>%
group_by(color) %>%
mutate(cdf=dnorm(value)) %>%
ggplot(mapping=aes(1:nrow(rgb), y=cdf, group=color, colour=color)) +
geom_line() +
scale_color_manual(values=c("blue", "green", "red")) +
ggtitle("Cumulative Distribution Function of Image Rows") +
facet_wrap(vars(color), ncol=1)
gauss <- rgb %>%
group_by(color) %>%
mutate(gauss=gaussian(value)) %>%
ggplot() +
geom_density(aes(x=gauss, group=color, colour=color)) +
geom_density(aes(x=value, group=color)) +
scale_color_manual(values=c('blue', 'green', 'red')) +
ggtitle('Gaussian function of Image Rows') +
facet_wrap(vars(color), ncol=1, scales="free_y")
#Format dataframe
df <- rgb %>%
group_by(color) %>%
mutate(pdf=pnorm(value),
cdf=dnorm(value),
gauss=gaussian(value),
row=row_number()) %>%
select(-value) %>%
pivot_wider(names_from=color, values_from = c(pdf, cdf, gauss)) %>%
select(-row)
pdf_img <- array(dim=dims)
pdf_img[,,1] <- df$pdf_red
pdf_img[,,2] <- df$pdf_green
pdf_img[,,3] <- df$pdf_blue
cdf_img <- array(dim=dims)
cdf_img[,,1] <- df$cdf_red
cdf_img[,,2] <- df$cdf_green
cdf_img[,,3] <- df$cdf_blue
gauss_img <- array(dim=dims)
gauss_img[,,1] <- df$gauss_red
gauss_img[,,2] <- df$gauss_green
gauss_img[,,3] <- df$gauss_blue
# Display new images
op <- par(
mai = c(0, 0, 0, 0),
mar = c(1, 1, 1, 1),
mfrow=c(2, 2),
bty = "n",
oma = c(0, 0, 0, 0),
omi = c(0, 0, 0, 0)
)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "Original"
)
rasterImage(img, 0, 0, dims[1], dims[2], interpolate = FALSE)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "PDF"
)
rasterImage(pdf_img, 0, 0, dims[1], dims[2], interpolate=FALSE)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "CDF"
)
rasterImage(cdf_img, 0, 0, dims[1], dims[2], interpolate=FALSE)
plot(
c(0, dims[1]),
c(dims[2], 0),
type = "n",
xlab = "",
ylab = "",
xaxt = "n",
yaxt = "n",
frame.plot = FALSE,
main = "Gaussian"
)
rasterImage(gauss_img, 0, 0, dims[1], dims[2], interpolate=FALSE)
par(op)
magic <- ggplot(data=rgb, aes(x=value, group=color, fill=color)) +
geom_density(adjust=1.5, alpha=.8) +
scale_fill_manual(values=c("blue", "green", "red")) +
ggtitle("Magically Making Distribution Look Good")
gauss
init <- array(c(1:25), dim=c(5,5))
init
gaussian2d(init[1:dim(init)[1], ], init[, 1:dim(init)[2]])
init[1:dim(init)[1], ]
init[, 1:dim(init)[2]]
